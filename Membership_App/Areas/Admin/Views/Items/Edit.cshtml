@model Membership_App.Entities.Item
@using Membership_App.Extensions


@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<h4>Item</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(m => m.Id)
<dl class="dl-horizontal">
    <dt>
        @Html.LabelFor(model => model.Title)

    </dt>
    <dd>
        <p>
            @Html.EditorFor(m => m.Title, new { htmlAttributes =  new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
        </p>
    </dd>

    <dt>
        @Html.LabelFor(model => model.Description)

    </dt>
    <dd>
        <p>
            @Html.TextAreaFor(m => m.Description,  new { @class = "form-control" } )
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </p>
    </dd>

    <dt>
        @Html.LabelFor(model => model.Url)

    </dt>
    <dd>
        <p>
            @Html.EditorFor(m => m.Url, new { htmlAttributes =  new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Url, "", new { @class = "text-danger" })
        </p>
    </dd>

    <dt>
        @Html.LabelFor(model => model.ImageUrl)

    </dt>
    <dd>
        <p>
            @Html.EditorFor(m => m.ImageUrl, new { htmlAttributes =  new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.ImageUrl, "", new { @class = "text-danger" })
        </p>
    </dd>

    <dt>
        @Html.LabelFor(model => model.HTML)

    </dt>
    <dd>
        <p>
            @Html.TextAreaFor(m => m.HTML,  new { @class = "form-control" } )
            @Html.ValidationMessageFor(m => m.HTML, "", new { @class = "text-danger" })
        </p>
    </dd>

    <dt>
        @Html.LabelFor(model => model.WaitDays)

    </dt>
    <dd>
        <p>
            @Html.EditorFor(m => m.WaitDays, new { htmlAttributes =  new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.WaitDays, "", new { @class = "text-danger" })
        </p>
    </dd>

    <dt>
        @Html.LabelFor(model => model.ItemTypes)

    </dt>
    <dd>
        <p>
            @Html.DropDownListFor(model => model.ItemTypeId,
                Model.ItemTypes.ToSelectListItem(Model.ItemTypeId),
                new { @class = "form-control", @PlaceHolder = "Section Title" })
            @Html.ValidationMessageFor(m => m.ItemTypes, "", new { @class = "text-danger" })
        </p>
    </dd>

    <dt>
        @Html.LabelFor(model => model.Sections)

    </dt>
    <dd>
        <p>
            @Html.DropDownListFor(model => model.SectionId,
                Model.Sections.ToSelectListItem(Model.SectionId),
                new { @class = "form-control", @PlaceHolder = "Section Title" })
            @Html.ValidationMessageFor(m => m.Sections, "", new { @class = "text-danger" })
        </p>
    </dd>

    <dt>
        @Html.LabelFor(model => model.Parts)

    </dt>
    <dd>
        <p>
            @Html.DropDownListFor(model => model.PartId,
                Model.Parts.ToSelectListItem(Model.PartId),
                new { @class = "form-control", @PlaceHolder = "Section Title" })
            @Html.ValidationMessageFor(m => m.Parts, "", new { @class = "text-danger" })
        </p>
    </dd>

    <dt>
        @Html.LabelFor(model => model.IsFree)

    </dt>
    <dd>
        <p>
            @Html.EditorFor(m => m.IsFree)
            @Html.ValidationMessageFor(m => m.IsFree, "", new { @class = "text-danger" })
        </p>
    </dd>


</dl>

    <div class="form-actions">
        <input type="submit" value="Save" class="btn btn-success btn-sm" />
    </div>

}

<hr />

@Html.Partial("_BackToListButton")